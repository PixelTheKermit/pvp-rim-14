using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Map;

namespace Content.Client._00OuterRim.Guidebook;


[GenerateTypedNameReferences]
public sealed partial class GuideEntityEmbed : BoxContainer
{
    [Dependency] private readonly IEntityManager _entityManager = default!;

    public ISpriteComponent? Sprite
    {
        get => View.Sprite;
        set => View.Sprite = value;
    }

    public Vector2 Scale
    {
        get => View.Scale;
        set => View.Scale = value;
    }

    public GuideEntityEmbed(string proto, bool caption)
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        var ent = _entityManager.SpawnEntity(proto, MapCoordinates.Nullspace);
        Sprite = _entityManager.GetComponent<SpriteComponent>(ent);

        if (caption)
            Caption.Text = _entityManager.GetComponent<MetaDataComponent>(ent).EntityName;
    }

    protected override void Dispose(bool disposing)
    {
        base.Dispose(disposing);

        if (Sprite is not null)
            _entityManager.DeleteEntity(Sprite.Owner);
    }
}
